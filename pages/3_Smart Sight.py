from ultralytics import YOLO
from PIL import Image
from gtts import gTTS
from io import BytesIO
import streamlit as st
import easyocr
import numpy as np
import cv2

def convert_str_to_audio_data(audio_text):
    audio_data = BytesIO()
    tts = gTTS(audio_text, lang = "th")
    tts.write_to_fp(audio_data)

    return audio_data

def show_audio():
    audio_data = convert_str_to_audio_data(audio_text)
    st.subheader("‡πÄ‡∏™‡∏µ‡∏¢‡∏áüîä")
    st.audio(audio_data)

st.title("Smart SightüëÄ")
st.header("‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ä‡πà‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏π‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πåüìÉ")
st.divider()
input_image = st.camera_input("üì∏‡∏Å‡∏î‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•...", key = "firstCamera")

if input_image is not None:
    audio_text = "‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: "

    img = Image.open(input_image)
    img_array = np.array(img)
    processed_image = img_array
    
    num_class = [1,2,7,5,3]
    information_list = ['Detail ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ',
                        'EXP ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ',
                        'Text ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ',
                        'Nutrition Fact ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ',
                        'FDA ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ']
    information_checker = ['Detail ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ',
                           'EXP ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ',
                           'Text ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ',
                           'Nutrition Fact ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ',
                           'FDA ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ']
    reader = easyocr.Reader(lang_list = ["th", "en"])

    model = YOLO("best.pt")
    results = model(img_array)
    for i in range(len(results[0])):
        boxes = results[0].boxes
        box = boxes[i].xyxy
        NClass = boxes[i].cls
        x = int(box[0][0])
        y = int(box[0][1])
        w = int(box[0][2])
        h = int(box[0][3])

        cv2.rectangle(processed_image, (x, y), (w, h), (255,0,0), 4)

        roi = img_array[y:h, x:w]
        if NClass in num_class:
            index = num_class.index(NClass)
            result = reader.readtext(roi)
            for text in result:
                information_list[index] = information_list[index] + text[1]
    
    st.divider()
    st.subheader("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πåüìë")

    if information_checker == information_list:
        st.write("‚ùå‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏â‡∏•‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà")
        audio_text = "‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏â‡∏•‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà"
        show_audio()
    else: 
        for item in information_list:
            if item not in information_checker:
                audio_text = audio_text + item
                st.write(item)
                show_audio()
                st.subheader("‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‚öôÔ∏è")
                st.image(processed_image)